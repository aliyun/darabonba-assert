/**
 * tea assert module
 */

/**
 * Judge the expect result is equal to the actual result
 * @param expect the expect result
 * @param actual the actual result
 * @param message the message which the assertion error is thrown with
 * @return void
 */
static function equal(expect: any, actual: any, message: string) throws: void;

/**
 * Judge the expect map is equal to the actual map in deep and strict way
 * @param expect the expect map
 * @param actual the actual map
 * @param message the message which the assertion error is thrown with
 * @return void
 */
static function mapEql(expect: map[string] any, actual: map[string] any, message: string) throws: void;

/**
 * Judge the expect array is equal to the actual array in deep and strict way
 * @param expect the expect array
 * @param actual the actual array
 * @param message the message which the assertion error is thrown with
 * @return void
 */
static function arrayEql(expect: [any], actual: [any], message: string) throws: void;

/**
 * throw assertion error with the message
 * @param message message the message which the assertion error is thrown with
 * @return void
 */
static function fail(message: string) throws: void;

/**
 * Judge the actual contains the subStr
 * @param actual the actual string
 * @param subStr the substring
 * @param message the message which the assertion error is thrown with
 * @return void
 */
static function contains(actual: string, subStr: string, message: string) throws: void;
